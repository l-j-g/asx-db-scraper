{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.1.11899",
      "templateHash": "9614100564091832264"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "The environment (dev, staging, prod)"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "asx-db-scraper",
      "metadata": {
        "description": "The project name"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-{1}', parameters('projectName'), parameters('environment'))]",
      "metadata": {
        "description": "The function app name"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "lg-db",
      "metadata": {
        "description": "The Cosmos DB account name"
      }
    },
    "cosmosDbName": {
      "type": "string",
      "defaultValue": "AsxDbScraper",
      "metadata": {
        "description": "The Cosmos DB database name"
      }
    },
    "containers": {
      "type": "array",
      "defaultValue": [
        {
          "name": "Companies"
        },
        {
          "name": "BalanceSheets"
        },
        {
          "name": "IncomeStatements"
        },
        {
          "name": "CashFlowStatements"
        }
      ],
      "metadata": {
        "description": "The Cosmos DB container names"
      }
    }
  },
  "variables": {
    "storageAccountName": "[format('{0}{1}{2}', parameters('projectName'), parameters('environment'), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-11-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "enableAutomaticFailover": false,
        "enableFreeTier": true,
        "publicNetworkAccess": "Enabled",
        "capabilities": [
          {
            "name": "EnableFreeTier"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), parameters('cosmosDbName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "cosmosDbContainers",
        "count": "[length(parameters('containers'))]"
      },
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-11-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbName'), parameters('containers')[copyIndex()].name)]",
      "properties": {
        "resource": {
          "id": "[parameters('containers')[copyIndex()].name]",
          "partitionKey": {
            "paths": [
              "/id"
            ]
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-plan', parameters('functionAppName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "F1",
        "tier": "Free"
      },
      "kind": "functionapp",
      "properties": {
        "reserved": true,
        "targetWorkerCount": 1,
        "maximumElasticWorkerCount": 1,
        "perSiteScaling": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-{1}-kv', parameters('projectName'), parameters('environment'))]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('functionAppName')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "CosmosDb:ConnectionString",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2023-11-15').connectionStrings[0].connectionString]"
            },
            {
              "name": "CosmosDb:DatabaseName",
              "value": "[parameters('cosmosDbName')]"
            },
            {
              "name": "CosmosDb:ContainerName",
              "value": "[parameters('containers')[0].name]"
            },
            {
              "name": "AlphaVantage:ApiKey",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/AlphaVantageApiKey/)', reference(resourceId('Microsoft.KeyVault/vaults', format('{0}-{1}-kv', parameters('projectName'), parameters('environment'))), '2023-07-01').vaultUri)]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "OPTIONS"
            ],
            "allowedHeaders": [
              "*"
            ],
            "exposedHeaders": [],
            "maxAgeInSeconds": 86400,
            "allowCredentials": true
          }
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('functionAppName')))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-{1}-kv', parameters('projectName'), parameters('environment')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', format('{0}-{1}-kv', parameters('projectName'), parameters('environment')), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-09-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-{1}-kv', parameters('projectName'), parameters('environment')))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "cosmosDbName": {
      "type": "string",
      "value": "[parameters('cosmosDbName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[format('{0}-{1}-kv', parameters('projectName'), parameters('environment'))]"
    }
  }
}