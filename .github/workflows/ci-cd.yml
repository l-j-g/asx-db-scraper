name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to (dev/prod)"
        required: true
        default: "prod"
        type: choice
        options:
          - dev
          - prod

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Publish
        run: dotnet publish AsxDbScraper/AsxDbScraper.csproj -c Release -o ./publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: function-app
          path: ./publish

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: "${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' ? 'prod' : 'dev') }}"
    environment: "${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' ? 'prod' : 'dev') }}"
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: function-app
          path: ./publish

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Function App Slot
        uses: Azure/functions-action@v1
        with:
          app-name: asx-db-scraper
          slot-name: "${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' ? 'production' : 'dev') }}"
          package: ./publish
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

      - name: Deploy Infrastructure
        run: |
          az deployment group create \
            --resource-group asx-db-rg \
            --template-file infrastructure/main.bicep \
            --parameters @infrastructure/main.parameters.${{ env.DEPLOY_ENV }}.json \
            --mode Incremental

      - name: Set deployment context
        run: |
          echo "Deploying to ${{ env.DEPLOY_ENV }} environment"
          echo "Triggered by ${{ github.event_name }} event"
          echo "Branch: ${{ github.ref }}"

      - name: Swap Slots
        if: github.ref == 'refs/heads/main'
        run: |
          az functionapp deployment slot swap \
            --name asx-db-scraper \
            --resource-group asx-db-rg \
            --slot staging \
            --target-slot production
